---
import { toHTML } from "../markdown.js";
export interface Props {
  value: string;
  discordCallback?: any 
}

const { value, discordCallback } = Astro.props;
const content = toHTML(value, { discordCallback })// marked.parse(value);
const randomId = Math.random().toString(36).substring(7);

const inputId = `input-${randomId}`;
const divId = `div-${randomId}`;
---

<div class="grid grid-cols-2">
  <textarea class="p-2 w-full bg-zinc-900" id={inputId}>{value.trim()}</textarea>
  <div class="relative bg-zinc-900">
    <div class="absolute top-0 right-0 rounded-md text-xs bg-blue-700 p-1">Preview</div>
    <div id={divId} set:html={content}></div>
  </div>
</div>

<script type="module" is:inline define:vars={{inputId, divId, discordCallback}}>
import { toHTML } from "../markdown.js";

const el = document.getElementById(inputId);
const display = document.getElementById(divId);

el.addEventListener('keyup', (e) => {
  const value = e.target?.value;
  const content = toHTML(value, { discordCallback });
  display.innerHTML = content.trim();
});
</script>
